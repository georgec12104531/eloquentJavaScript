class Temperature {
  constructor(celsius) {
    this.celsius = celsius;
  } 
  // getter
  get fahrenheit() {
    return (this.celsius * 1.8) + 32;
  }

  // setter
  set fahrenheit(value) {
    this.celsius = (value - 32) * 1.8;
  }

  // Stored in the constructor. You're able to create new Temperatures from this method using a F value.
  static fromFahrenheit(value) {
   return new Temperature((value - 32) + 1.8)
  }


class Vec {
  constructor(x, y) {
    this.x = x;
    this.y = y;
  }

  plus(vec2) {
    this.x += Math.floor(vec2.x);
    this.y += Math.floor(vec2.y);
  }

  minus(vec2) {
    console.log('vec2', vec2)
    this.x -= Math.floor(vec2.x);
    this.y -= Math.floor(vec2.y);
  }
}

let vecOne = new Vec(1, 2);
// vecOne.plus(new Vec(2, 3))
vecOne.minus(new Vec(1, 2));
console.log(vecOne)
// console.log(vecOne);

class Group {
  constructor() {
    this.container = [];
  }

  has(value) {};

  add(value) {};

  delete() {};

  static from(arr) {
    let groupOne = new Group();
    arr.forEach(el => groupOne.container.push(el));
    return groupOne;
  };

}

let group = Group.from([10, 20]);
console.log(group)
// console.log(group.has(10));
// → true
// console.log(group.has(30));
// → false
// group.add(10);
// group.delete(10);
// console.log(group.has(10));
// → false

// let newGroup = new Group;
